{"ast":null,"code":"var _jsxFileName = \"/Users/iganaskret/Library/Mobile Documents/com~apple~CloudDocs/KEA/3rd Semester/EXAM 3RD SEMESTER/react-list/src/NewsletterList.js\";\nimport React, { Component } from \"react\";\nimport NewsletterListItem from \"./NewsletterListItem.js\";\n\nclass NewsletterList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: false,\n      users: []\n    };\n    this.deleteRecord = this.deleteRecord.bind(this);\n    this.filterList = this.filterList.bind(this);\n    this.sortList = this.sortList.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    const baseURL = \"https://form4earth-2b74.restdb.io/rest/subscribers\";\n    const headers = {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      \"x-apikey\": \"5de4e9004658275ac9dc2184\",\n      \"cache-control\": \"no-cache\"\n    };\n    fetch(baseURL, {\n      method: \"get\",\n      headers: headers\n    }).then(response => response.json()).then(data => this.setState({\n      users: data,\n      loading: false\n    }));\n  } //   deleteRecord(id) {\n  //     fetch(\"https://form4earth-2b74.restdb.io/rest/form4earth/\" + id, {\n  //       method: \"delete\",\n  //       headers: {\n  //         \"Content-Type\": \"application/json; charset=utf-8\",\n  //         \"x-apikey\": \"5de4e9004658275ac9dc2184\",\n  //         \"cache-control\": \"no-cache\"\n  //       }\n  //     })\n  //       .then(res => res.json())\n  //       .then(\n  //         this.setState(prevState => {\n  //           const updatedUsers = prevState.users.map(user => {\n  //             if (user._id === id) {\n  //               user.isDeleted = true;\n  //             }\n  //             return user;\n  //           });\n  //           return {\n  //             users: updatedUsers\n  //           };\n  //         })\n  //       );\n  //   }\n  //   filterList(e) {\n  //     e.target.checked = true;\n  //     // check which filtering option is checked\n  //     const value = e.target.id;\n  //     this.setState(prevState => {\n  //       const filteredUsers = prevState.users.map(user => {\n  //         if (value === \"all\") {\n  //           user.isHidden = false;\n  //         } else if (value === \"yes\") {\n  //           if (user.Subscriber) {\n  //             user.isHidden = false;\n  //           } else {\n  //             user.isHidden = true;\n  //           }\n  //         } else {\n  //           if (!user.Subscriber) {\n  //             user.isHidden = false;\n  //           } else {\n  //             user.isHidden = true;\n  //           }\n  //         }\n  //         return user;\n  //       });\n  //       return {\n  //         users: filteredUsers\n  //       };\n  //     });\n  //   }\n  //   sortList(e) {\n  //     let value = e.target.value;\n  //     // sorting the list that is received, before displaying it\n  //     var obj = [...this.state.users];\n  //     this.setState(prevState => {\n  //       if (value != \"none\") {\n  //         // sort by chosen option\n  //         obj.sort((a, b) => {\n  //           console.log(a, b);\n  //           return a[value].localeCompare(b[value]);\n  //         });\n  //       }\n  //       const sortedUsers = obj.map(user => {\n  //         return user;\n  //       });\n  //       return {\n  //         users: sortedUsers\n  //       };\n  //     });\n  //   }\n  // constructor() {\n  //   super();\n  //   this.state = {\n  //     loading: false,\n  //     users: []\n  //   };\n  // }\n\n\n  render() {\n    const text = this.state.loading ? \"loading...\" : this.state.users.map(user => {\n      return React.createElement(NewsletterListItem, {\n        user: user,\n        deleteRecord: this.deleteRecord,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      className: \"table-users\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      id: \"list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      className: \"head-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"First name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Discount code\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Delete\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, text)));\n  }\n\n}\n\nexport default NewsletterList;","map":{"version":3,"sources":["/Users/iganaskret/Library/Mobile Documents/com~apple~CloudDocs/KEA/3rd Semester/EXAM 3RD SEMESTER/react-list/src/NewsletterList.js"],"names":["React","Component","NewsletterListItem","NewsletterList","constructor","state","loading","users","deleteRecord","bind","filterList","sortList","componentDidMount","setState","baseURL","headers","fetch","method","then","response","json","data","render","text","map","user"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport NewsletterListItem from \"./NewsletterListItem.js\";\n\nclass NewsletterList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: false,\n      users: []\n    };\n    this.deleteRecord = this.deleteRecord.bind(this);\n    this.filterList = this.filterList.bind(this);\n    this.sortList = this.sortList.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n    const baseURL = \"https://form4earth-2b74.restdb.io/rest/subscribers\";\n    const headers = {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      \"x-apikey\": \"5de4e9004658275ac9dc2184\",\n      \"cache-control\": \"no-cache\"\n    };\n    fetch(baseURL, {\n      method: \"get\",\n      headers: headers\n    })\n      .then(response => response.json())\n      .then(data => this.setState({ users: data, loading: false }));\n  }\n\n  //   deleteRecord(id) {\n  //     fetch(\"https://form4earth-2b74.restdb.io/rest/form4earth/\" + id, {\n  //       method: \"delete\",\n  //       headers: {\n  //         \"Content-Type\": \"application/json; charset=utf-8\",\n  //         \"x-apikey\": \"5de4e9004658275ac9dc2184\",\n  //         \"cache-control\": \"no-cache\"\n  //       }\n  //     })\n  //       .then(res => res.json())\n  //       .then(\n  //         this.setState(prevState => {\n  //           const updatedUsers = prevState.users.map(user => {\n  //             if (user._id === id) {\n  //               user.isDeleted = true;\n  //             }\n  //             return user;\n  //           });\n  //           return {\n  //             users: updatedUsers\n  //           };\n  //         })\n  //       );\n  //   }\n\n  //   filterList(e) {\n  //     e.target.checked = true;\n\n  //     // check which filtering option is checked\n  //     const value = e.target.id;\n\n  //     this.setState(prevState => {\n  //       const filteredUsers = prevState.users.map(user => {\n  //         if (value === \"all\") {\n  //           user.isHidden = false;\n  //         } else if (value === \"yes\") {\n  //           if (user.Subscriber) {\n  //             user.isHidden = false;\n  //           } else {\n  //             user.isHidden = true;\n  //           }\n  //         } else {\n  //           if (!user.Subscriber) {\n  //             user.isHidden = false;\n  //           } else {\n  //             user.isHidden = true;\n  //           }\n  //         }\n  //         return user;\n  //       });\n  //       return {\n  //         users: filteredUsers\n  //       };\n  //     });\n  //   }\n\n  //   sortList(e) {\n  //     let value = e.target.value;\n  //     // sorting the list that is received, before displaying it\n  //     var obj = [...this.state.users];\n\n  //     this.setState(prevState => {\n  //       if (value != \"none\") {\n  //         // sort by chosen option\n  //         obj.sort((a, b) => {\n  //           console.log(a, b);\n  //           return a[value].localeCompare(b[value]);\n  //         });\n  //       }\n  //       const sortedUsers = obj.map(user => {\n  //         return user;\n  //       });\n  //       return {\n  //         users: sortedUsers\n  //       };\n  //     });\n  //   }\n\n  // constructor() {\n  //   super();\n  //   this.state = {\n  //     loading: false,\n  //     users: []\n  //   };\n  // }\n\n  render() {\n    const text = this.state.loading\n      ? \"loading...\"\n      : this.state.users.map(user => {\n          return (\n            <NewsletterListItem user={user} deleteRecord={this.deleteRecord} />\n          );\n        });\n    return (\n      <div className=\"table-users\">\n        <table id=\"list\">\n          <thead>\n            <tr className=\"head-row\">\n              <th>First name</th>\n              <th>Email</th>\n              <th>Discount code</th>\n              <th>Delete</th>\n            </tr>\n          </thead>\n          <tbody>{text}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default NewsletterList;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/iganaskret/Library/Mobile Documents/com~apple~CloudDocs/KEA/3rd Semester/EXAM 3RD SEMESTER/react-list/src/NewsletterList.js\";\nimport React, { Component } from \"react\";\n\nclass NewsletterList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: false,\n      emails: []\n    }; // this.deleteRecord = this.deleteRecord.bind(this);\n    // this.filterList = this.filterList.bind(this);\n    // this.sortList = this.sortList.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    const baseURL = \"https://form4earth-2b74.restdb.io/rest/subscribers\";\n    const headers = {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      \"x-apikey\": \"\t5de4e9004658275ac9dc2184\",\n      \"cache-control\": \"no-cache\"\n    };\n    fetch(baseURL, {\n      method: \"get\",\n      headers: headers\n    }).then(response => response.json()).then(data => this.setState({\n      users: data,\n      loading: false\n    }));\n  } //   deleteRecord(id) {\n  //     fetch(\"https://form4earth-2b74.restdb.io/rest/form4earth/\" + id, {\n  //       method: \"delete\",\n  //       headers: {\n  //         \"Content-Type\": \"application/json; charset=utf-8\",\n  //         \"x-apikey\": \"5de4e9004658275ac9dc2184\",\n  //         \"cache-control\": \"no-cache\"\n  //       }\n  //     })\n  //       .then(res => res.json())\n  //       .then(\n  //         this.setState(prevState => {\n  //           const updatedUsers = prevState.users.map(user => {\n  //             if (user._id === id) {\n  //               user.isDeleted = true;\n  //             }\n  //             return user;\n  //           });\n  //           return {\n  //             users: updatedUsers\n  //           };\n  //         })\n  //       );\n  //   }\n  //   filterList(e) {\n  //     e.target.checked = true;\n  //     // check which filtering option is checked\n  //     const value = e.target.id;\n  //     this.setState(prevState => {\n  //       const filteredUsers = prevState.users.map(user => {\n  //         if (value === \"all\") {\n  //           user.isHidden = false;\n  //         } else if (value === \"yes\") {\n  //           if (user.Subscriber) {\n  //             user.isHidden = false;\n  //           } else {\n  //             user.isHidden = true;\n  //           }\n  //         } else {\n  //           if (!user.Subscriber) {\n  //             user.isHidden = false;\n  //           } else {\n  //             user.isHidden = true;\n  //           }\n  //         }\n  //         return user;\n  //       });\n  //       return {\n  //         users: filteredUsers\n  //       };\n  //     });\n  //   }\n  //   sortList(e) {\n  //     let value = e.target.value;\n  //     // sorting the list that is received, before displaying it\n  //     var obj = [...this.state.emails];\n  //     this.setState(prevState => {\n  //       if (value != \"none\") {\n  //         // sort by chosen option\n  //         obj.sort((a, b) => {\n  //           console.log(a, b);\n  //           return a[value].localeCompare(b[value]);\n  //         });\n  //       }\n  //       const sortedUsers = obj.map(user => {\n  //         return user;\n  //       });\n  //       return {\n  //         users: sortedUsers\n  //       };\n  //     });\n  //   }\n\n\n  render() {\n    const text = this.state.loading ? \"loading...\" : this.state.emails.map(user => {\n      return React.createElement(NewsletterListItem, {\n        user: user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"table\", {\n      id: \"list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      className: \"head-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Email\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, this.props.user));\n  }\n\n}\n\nexport default NewsletterList;","map":{"version":3,"sources":["/Users/iganaskret/Library/Mobile Documents/com~apple~CloudDocs/KEA/3rd Semester/EXAM 3RD SEMESTER/react-list/src/NewsletterList.js"],"names":["React","Component","NewsletterList","constructor","state","loading","emails","componentDidMount","setState","baseURL","headers","fetch","method","then","response","json","data","users","render","text","map","user","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,cAAN,SAA6BD,SAA7B,CAAuC;AACrCE,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,KADE;AAEXC,MAAAA,MAAM,EAAE;AAFG,KAAb,CAFY,CAMZ;AACA;AACA;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,QAAL,CAAc;AAAEH,MAAAA,OAAO,EAAE;AAAX,KAAd;AACA,UAAMI,OAAO,GAAG,oDAAhB;AACA,UAAMC,OAAO,GAAG;AACd,sBAAgB,iCADF;AAEd,kBAAY,2BAFE;AAGd,uBAAiB;AAHH,KAAhB;AAKAC,IAAAA,KAAK,CAACF,OAAD,EAAU;AACbG,MAAAA,MAAM,EAAE,KADK;AAEbF,MAAAA,OAAO,EAAEA;AAFI,KAAV,CAAL,CAIGG,IAJH,CAIQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAJpB,EAKGF,IALH,CAKQG,IAAI,IAAI,KAAKR,QAAL,CAAc;AAAES,MAAAA,KAAK,EAAED,IAAT;AAAeX,MAAAA,OAAO,EAAE;AAAxB,KAAd,CALhB;AAMD,GA1BoC,CA4BrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAa,EAAAA,MAAM,GAAG;AACP,UAAMC,IAAI,GAAG,KAAKf,KAAL,CAAWC,OAAX,GACT,YADS,GAET,KAAKD,KAAL,CAAWE,MAAX,CAAkBc,GAAlB,CAAsBC,IAAI,IAAI;AAC5B,aAAO,oBAAC,kBAAD;AAAoB,QAAA,IAAI,EAAEA,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFD,CAFJ;AAKA,WACE;AAAO,MAAA,EAAE,EAAC,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,KAAKC,KAAL,CAAWD,IAAnB,CANF,CADF;AAUD;;AA1HoC;;AA6HvC,eAAenB,cAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass NewsletterList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: false,\n      emails: []\n    };\n    // this.deleteRecord = this.deleteRecord.bind(this);\n    // this.filterList = this.filterList.bind(this);\n    // this.sortList = this.sortList.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n    const baseURL = \"https://form4earth-2b74.restdb.io/rest/subscribers\";\n    const headers = {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      \"x-apikey\": \"\t5de4e9004658275ac9dc2184\",\n      \"cache-control\": \"no-cache\"\n    };\n    fetch(baseURL, {\n      method: \"get\",\n      headers: headers\n    })\n      .then(response => response.json())\n      .then(data => this.setState({ users: data, loading: false }));\n  }\n\n  //   deleteRecord(id) {\n  //     fetch(\"https://form4earth-2b74.restdb.io/rest/form4earth/\" + id, {\n  //       method: \"delete\",\n  //       headers: {\n  //         \"Content-Type\": \"application/json; charset=utf-8\",\n  //         \"x-apikey\": \"5de4e9004658275ac9dc2184\",\n  //         \"cache-control\": \"no-cache\"\n  //       }\n  //     })\n  //       .then(res => res.json())\n  //       .then(\n  //         this.setState(prevState => {\n  //           const updatedUsers = prevState.users.map(user => {\n  //             if (user._id === id) {\n  //               user.isDeleted = true;\n  //             }\n  //             return user;\n  //           });\n  //           return {\n  //             users: updatedUsers\n  //           };\n  //         })\n  //       );\n  //   }\n\n  //   filterList(e) {\n  //     e.target.checked = true;\n\n  //     // check which filtering option is checked\n  //     const value = e.target.id;\n\n  //     this.setState(prevState => {\n  //       const filteredUsers = prevState.users.map(user => {\n  //         if (value === \"all\") {\n  //           user.isHidden = false;\n  //         } else if (value === \"yes\") {\n  //           if (user.Subscriber) {\n  //             user.isHidden = false;\n  //           } else {\n  //             user.isHidden = true;\n  //           }\n  //         } else {\n  //           if (!user.Subscriber) {\n  //             user.isHidden = false;\n  //           } else {\n  //             user.isHidden = true;\n  //           }\n  //         }\n  //         return user;\n  //       });\n  //       return {\n  //         users: filteredUsers\n  //       };\n  //     });\n  //   }\n\n  //   sortList(e) {\n  //     let value = e.target.value;\n  //     // sorting the list that is received, before displaying it\n  //     var obj = [...this.state.emails];\n\n  //     this.setState(prevState => {\n  //       if (value != \"none\") {\n  //         // sort by chosen option\n  //         obj.sort((a, b) => {\n  //           console.log(a, b);\n  //           return a[value].localeCompare(b[value]);\n  //         });\n  //       }\n  //       const sortedUsers = obj.map(user => {\n  //         return user;\n  //       });\n  //       return {\n  //         users: sortedUsers\n  //       };\n  //     });\n  //   }\n\n  render() {\n    const text = this.state.loading\n      ? \"loading...\"\n      : this.state.emails.map(user => {\n          return <NewsletterListItem user={user} />;\n        });\n    return (\n      <table id=\"list\">\n        <thead>\n          <tr className=\"head-row\">\n            <th>Email</th>\n          </tr>\n        </thead>\n        <tbody>{this.props.user}</tbody>\n      </table>\n    );\n  }\n}\n\nexport default NewsletterList;\n"]},"metadata":{},"sourceType":"module"}